{"version":3,"file":"/js/app.js","mappings":"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","sources":["webpack:///./resources/js/app.js"],"sourcesContent":["import FastAverageColor from 'fast-average-color';\n\nwindow.Lists = new (function () {\n    this.store = function (list, items){\n\n      sessionStorage.setItem('list-'+list, JSON.stringify(items))\n    }\n\n    this.clear = function (list){\n\n      sessionStorage.setItem('list-'+list, JSON.stringify([]))\n    }\n\n    this.appendOrStore = function (list, items){\n      if (Lists.get(list)){\n        Lists.append(list, items)\n      }else{\n\n        Lists.store(list, items)\n      }\n    }\n\n    this.removeDuplicates = function(list){\n      let items = Lists.get(list)\n      items = items.reduce(function(a,b){if(a.indexOf(b)<0)a.push(b);return a;},[]);\n      Lists.store(list, items)\n\n    }\n\n    this.append = function (list, songs){\n      let items = Lists.get(list)\n      items = items.concat(songs)\n      sessionStorage.setItem('list-'+list, JSON.stringify(items))\n    }\n\n    this.merge = function (lista, listb){\n      let itemsa = Lists.get(lista)\n      let itemsb = Lists.get(listb)\n      itemsa = itemsa.concat(itemsb)\n      sessionStorage.setItem('list-'+lista, JSON.stringify(itemsa))\n    }\n\n    this.shuffle = function (list){\n      let items = JSON.parse(sessionStorage.getItem('list-'+list))\n\n      for (let i = items.length - 1; i > 0; i--) {\n          let j = Math.floor(Math.random() * (i + 1));\n          let temp = items[i];\n          items[i] = items[j];\n          items[j] = temp;\n      }\n\n      sessionStorage.setItem('list-'+list, JSON.stringify(items))\n      return this;\n    }\n\n    this.get = function (list){\n      try {\n        return JSON.parse(sessionStorage.getItem('list-'+list));\n      } catch {\n        return false;\n      }\n    }\n  });\n\nwindow.Spotifynt = new (function () {\n  let url = process.env.BEETS_URL;\n\n  this.player = new (function () {\n    this.show = function(song){\n      document.querySelector(\"#audio-player\").src = Spotifynt.command.fileUrl(song.id);\n      document.querySelector(\"#text-songTitle\").textContent = song.title\n      document.querySelector(\"#text-songArtist\").textContent = song.artist\n      document.querySelector(\"#img-songArt\").src =  Spotifynt.command.artUrl(song.album_id)\n      document.querySelector(\"#row-player\").hidden = false;\n      document.querySelector(\"#text-songBitrate\").textContent = Math.round(song.bitrate / 1000) + \" kpbs\";\n      document.querySelector(\"#text-songFormat\").textContent = song.format;\n\n      Spotifynt.metadata.set(song, Spotifynt.command.artUrl(song.album_id))\n\n      Spotifynt.displayPlayer(true);\n\n      const fac = new FastAverageColor();\n\n      fac.getColorAsync(document.querySelector(\"#img-songArt\").src)\n          .then(color => {\n            document.querySelector(\"#app\").style.backgroundColor = color.hex + \"99\"\n            document.querySelector(\"meta[name='theme-color'\").content = color.hex;\n          })\n          .catch(e => console.log(e));\n      }\n  });\n\n  this.playlist = new(function () {\n\n    function get(playlist=\"playlist-actual\") {\n      return Lists.get(playlist);\n    }\n    this.new = function(playlist, songs){\n      let items = []\n      for (let song of songs){\n        items.push(song.id)\n      }\n      Lists.clear(playlist)\n      Lists.store(playlist, items)\n      Lists.removeDuplicates(playlist)\n\n      return this;\n    }\n    this.load = function(songs, random=false, playlist=\"playlist-actual\") {\n      if(random){\n        Lists.shuffle(songs);\n      }\n      Lists.appendOrStore(playlist, get(songs));\n      Lists.removeDuplicates(playlist);\n      return this;\n    }\n\n    this.clear = function(playlist=\"playlist-actual\") {\n      Lists.clear(playlist);\n\n      return this;\n    }\n\n    this.play = function(i=false, playlist=\"playlist-actual\") {\n      if (i === false){\n        i = parseInt(sessionStorage.getItem(\"playlist-actual-i\"));\n      }\n      sessionStorage.setItem(\"playlist-actual-i\", i);\n      Spotifynt.command.item(get(playlist)[i])\n        .then(song => {\n          Spotifynt.player.show(song)\n          Spotifynt.player_playpause(\"play\");\n        })\n\n    }\n\n    this.move = function(i, playlist=\"playlist-actual\") {\n      let length = get(playlist).length;\n      let actual = parseInt(sessionStorage.getItem(\"playlist-actual-i\"));\n      let nuevo = (((actual + i) % length) + length) % length;\n      sessionStorage.setItem(\"playlist-actual-i\", nuevo);\n\n      return this;\n    }\n\n  })\n\n  this.metadata = new (function () {\n    this.set = function (item, image){\n      navigator.mediaSession.metadata = new MediaMetadata({\n        title: item.title,\n        artist: item.artist,\n        album: item.album,\n        artwork: [\n          { src: image, sizes: '512x512', type: 'image/png' },\n        ]\n      });\n    }\n  });\n\n  this.command = new (function () {\n    this.getAlbumSongs = function (id){\n\n      return command(`album/${id}?expand`)\n    }\n\n    this.item = function (id){\n\n      return command(`item/${id}`)\n    }\n\n    this.querySong = function (query){\n\n      return command(`item/query/${query}`)\n    }\n\n    this.queryAlbum = function (query){\n\n      return command(`album/query/${query}`)\n    }\n\n    this.artUrl = function (id){\n\n      return `${url}/album/${id}/art`\n    }\n\n    this.fileUrl = function (id){\n\n      return `${url}/item/${id}/file`\n    }\n\n    function command(arg){\n      return fetch(`${url}/${arg}`, {method: 'GET'})\n        .then(response => response.json())\n    }\n  });\n\n  this.search = function (query){\n    this.command.querySong(query)\n      .then(response => {\n        let results = response.results\n        show_songs(results, 'search')\n        Spotifynt.playlist.new('search', results)\n      })\n      .catch(err => console.error(err))\n\n    this.command.queryAlbum(query)\n      .then(response => {\n        let results = response.results\n        show_albums(results)\n      })\n      .catch(err => console.error(err))\n  }\n\n  this.show_info = function (item=0){\n    let list = sessionStorage.getItem(\"list_showing\")\n    let song_id = JSON.parse(sessionStorage.getItem(`list-${list}`))[item]\n\n    beet_getItem(song_id)\n    .then(song => {\n      document.querySelector(\"#modal-infoBody\").innerHTML = \"\"\n      for (e in song) {\n        p = document.createElement(\"p\")\n        p.innerHTML = `<b>${e}</b>: ${song[e]}`\n        document.querySelector(\"#modal-infoBody\").appendChild(p)\n      }\n      document.querySelector(\"#modal-infoTitle\").textContent = song.title\n\n      $('#modal-info').modal('show')\n    })\n  }\n\n  this.getAlbumSongs = function (id){\n    return Spotifynt.command.getAlbumSongs(id);\n  }\n\n\n  function show_albums(albums) {\n    let l = document.querySelector(\"#div-albumResults\");\n    l.innerHTML = \"\";\n\n    for (const [i, album] of albums.entries()){\n      let t = document.querySelector(\"#template-albumResult\").cloneNode(true).content;\n\n      t.querySelector(\"[data-album='title']\").textContent = `${album.album}`\n      t.querySelector(\"[data-album='artist']\").textContent = `${album.albumartist}`\n      t.querySelector(\"[data-album='art']\").src = Spotifynt.command.artUrl(album.id)\n      t.querySelector(\"[data-album='append']\").addEventListener(\"click\", () => {\n        Spotifynt.getAlbumSongs(album.id)\n        .then(songs => Spotifynt.playlist.new(`album-${album.id}`, songs.items).load(`album-${album.id}`))\n      })\n      t.querySelector(\"[data-album='play']\").addEventListener(\"click\", () => {\n\n        Spotifynt.getAlbumSongs(album.id)\n        .then(songs => {\n          Spotifynt.playlist.new(`album-${album.id}`, songs.items).clear().load(`album-${album.id}`).play(0)\n        })\n      })\n      //t.querySelector(\".list-song-info\").onclick = () => show_info(i);\n\n      //if (song.format === \"FLAC\"){\n        //t.querySelector(\".list-song-title\").classList.add('mdi')\n        //t.querySelector(\".list-song-title\").classList.add('mdi-quality-high')\n      //}\n\n      l.appendChild(t);\n\n    }\n    Spotifynt.displayAlbumResults(true);\n  }\n\n  function show_songs(songs, list){\n    sessionStorage.setItem(\"list_showing\", list);\n    //document.querySelector(\"#row-songResults\").hidden = false;\n    let l = document.querySelector(\"#div-songResults\");\n    l.innerHTML = \"\";\n\n    for (const [i, song] of songs.entries()){\n      let t = document.querySelector(\"#template-songResult\").cloneNode(true).content;\n\n      t.querySelector(\"[data-song='title']\").textContent = `${song.title}`\n      t.querySelector(\"[data-song='artist']\").textContent = `${song.artist}`\n      //t.querySelector(\".list-song-album\").textContent = `${song.album}`\n      //t.querySelector(\".list-song-play\").onclick = () => btn_play(i);\n      //t.querySelector(\".list-song-info\").onclick = () => show_info(i);\n\n      //if (song.format === \"FLAC\"){\n        //t.querySelector(\".list-song-title\").classList.add('mdi')\n        //t.querySelector(\".list-song-title\").classList.add('mdi-quality-high')\n      //}\n\n      l.appendChild(t);\n\n    }\n\n    Spotifynt.displaySongResults(true);\n  }\n\n\n  this.btn_play = function (i){\n    let list = sessionStorage.getItem(\"list_showing\");\n    list.clear('playlist')\n    list.merge('playlist', list)\n    playlist_play(i)\n  }\n\n  this.player_playpause = function (action=\"\"){\n    let player = document.querySelector(\"#audio-player\");\n    if (player.paused || action === \"play\"){\n      sessionStorage.setItem(\"player_playing\", 'playing');\n\n      document.querySelector(\"#icon-pause\").hidden = false;\n      document.querySelector(\"#icon-play\").hidden = true;\n\n      player.play()\n\n    }else if(!player.paused || action === \"pause\"){\n      sessionStorage.setItem(\"player_playing\", 'paused');\n\n      document.querySelector(\"#icon-play\").hidden = false;\n      document.querySelector(\"#icon-pause\").hidden = true;\n\n      player.pause()\n    }\n  }\n\n  this.displaySongResults = function (e){\n    document.querySelector(\"#row-songResults\").hidden = !e\n  }\n\n  this.displayAlbumResults = function (e){\n    document.querySelector(\"#row-albumResults\").hidden = !e\n  }\n\n  this.displayPlayer = function (e){\n    document.querySelector(\"#row-player\").hidden = !e\n  }\n\n});\n\nnavigator.mediaSession.setActionHandler('play', () => Spotifynt.player_playpause('play'));\nnavigator.mediaSession.setActionHandler('pause', () => Spotifynt.player_playpause('pause'));\nnavigator.mediaSession.setActionHandler('previoustrack', () => Spotifynt.playlist.move(-1).play());\nnavigator.mediaSession.setActionHandler('nexttrack', () => Spotifynt.playlist.move(1).play());\n\ndocument.querySelector('#input-search').addEventListener('change', e => Spotifynt.search(e.target.value))\ndocument.querySelector(\"#audio-player\").addEventListener('ended', () => Spotifynt.playlist.move(1).play())\ndocument.querySelector(\"#btn-nextSong\").addEventListener('click', () => Spotifynt.playlist.move(1).play())\ndocument.querySelector(\"#btn-prevSong\").addEventListener('click', () => Spotifynt.playlist.move(-1).play())\ndocument.querySelector(\"#btn-playpause\").addEventListener('click', () => Spotifynt.player_playpause())\n\ndocument.querySelector(\"#btn-playPlaylist\").addEventListener('click', () => {\n  Spotifynt.playlist.clear().load(\"search\", true).play(0);\n})\n\ndocument.querySelector(\"#btn-appendPlaylist\").addEventListener('click', () => {\n  Spotifynt.playlist.load(\"search\")\n})\n\nif (process.env.APP_ENV == 'production'){\n  window.addEventListener('beforeunload', e => {\n    e.preventDefault();\n    e.returnValue = '';\n  });\n}\n\n"],"names":["window","Lists","this","store","list","items","sessionStorage","setItem","JSON","stringify","clear","appendOrStore","get","append","removeDuplicates","reduce","a","b","indexOf","push","songs","concat","merge","lista","listb","itemsa","itemsb","shuffle","parse","getItem","i","length","j","Math","floor","random","temp","Spotifynt","url","process","player","show","song","document","querySelector","src","command","fileUrl","id","textContent","title","artist","artUrl","album_id","hidden","round","bitrate","format","metadata","set","displayPlayer","FastAverageColor","getColorAsync","then","color","style","backgroundColor","hex","content","e","console","log","playlist","load","play","parseInt","item","player_playpause","move","actual","nuevo","image","navigator","mediaSession","MediaMetadata","album","artwork","sizes","type","arg","fetch","method","response","json","getAlbumSongs","querySong","query","queryAlbum","search","results","l","innerHTML","entries","t","cloneNode","appendChild","displaySongResults","show_songs","err","error","albums","albumartist","addEventListener","displayAlbumResults","show_albums","show_info","song_id","beet_getItem","p","createElement","$","modal","btn_play","playlist_play","action","paused","pause","setActionHandler","target","value","preventDefault","returnValue"],"sourceRoot":""}